# Generated by Django 2.2.5 on 2019-09-25 12:05

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='接口名称')),
                ('httpType', models.CharField(choices=[('HTTP', 'HTTP'), ('HTTPS', 'HTTPS')], default='HTTP', max_length=50, verbose_name='http/https')),
                ('method', models.CharField(choices=[('POST', 'POST'), ('GET', 'GET'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=50, verbose_name='请求方式')),
                ('apiAddress', models.CharField(max_length=1024, verbose_name='接口地址')),
                ('requestParameterType', models.CharField(choices=[('form-data', '表单(form-data)'), ('raw', '源数据(raw)')], default='1', max_length=50, verbose_name='请求参数格式')),
                ('status', models.CharField(default='', max_length=32, verbose_name='状态1成功，0失败')),
                ('user', models.CharField(max_length=32, verbose_name='创建人')),
                ('desc', models.CharField(blank=True, max_length=1024, null=True, verbose_name='描述')),
                ('CreateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='创建时间')),
                ('LastUpdateTime', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
            ],
            options={
                'verbose_name': '接口',
                'verbose_name_plural': '接口管理',
            },
        ),
        migrations.CreateModel(
            name='AutoApiCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fuctionLib_id', models.IntegerField(null=True, verbose_name='签名ids')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='接口名称')),
                ('httpType', models.CharField(choices=[('HTTP', 'HTTP'), ('HTTPS', 'HTTPS')], default='HTTPS', max_length=50, verbose_name='http/https')),
                ('method', models.CharField(choices=[('POST', 'POST'), ('GET', 'GET'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=50, verbose_name='请求方式')),
                ('apiAddress', models.CharField(max_length=1024, verbose_name='接口地址')),
                ('requestParameterType', models.CharField(choices=[('form-data', '表单(form-data)'), ('raw', '源数据(raw)')], max_length=50, verbose_name='请求参数格式')),
                ('status', models.CharField(default='', max_length=32, verbose_name='返回结果')),
                ('sort', models.IntegerField(default=0, verbose_name='排序')),
                ('user', models.CharField(max_length=32, verbose_name='创建人')),
                ('desc', models.CharField(blank=True, max_length=1024, null=True, verbose_name='描述')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('LastUpdateTime', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
            ],
            options={
                'verbose_name': '所属接口',
                'verbose_name_plural': '所属接口管理',
            },
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='标题')),
                ('user', models.CharField(max_length=50, verbose_name='创建人')),
                ('mail', models.CharField(max_length=100, null=True, verbose_name='邮箱')),
                ('fbtype', models.CharField(max_length=50, verbose_name='反馈类型')),
                ('context', models.TextField(blank=True, null=True, verbose_name='反馈内容')),
                ('status', models.IntegerField(default=0, verbose_name='0:未确认 1:已修复')),
                ('modfyuser', models.CharField(max_length=50, null=True, verbose_name='修复人')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('modfyTime', models.DateTimeField(null=True, verbose_name='修复时间')),
            ],
        ),
        migrations.CreateModel(
            name='fuctionLib',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='函数名称')),
                ('method', models.CharField(max_length=100, verbose_name='方法')),
                ('ftype', models.IntegerField(default=0, verbose_name='0:签名 1:加密函数 2：随机函数 3：四则运算4：系统函数')),
                ('desc', models.CharField(max_length=100, null=True, verbose_name='描述')),
            ],
        ),
        migrations.CreateModel(
            name='globalVariable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('autoApi_id', models.IntegerField(null=True, verbose_name='用例')),
                ('gType', models.IntegerField(default=0, verbose_name='用例0:自建，1：数据库,2:返回值')),
                ('name', models.CharField(max_length=50, verbose_name='变量名')),
                ('path', models.CharField(max_length=200, null=True, verbose_name='返回参数路径')),
                ('value', models.CharField(max_length=1000, null=True, verbose_name='变量值')),
                ('user', models.CharField(max_length=50, verbose_name='创建人')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='manage_permission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content_type_id', models.CharField(max_length=100, null=True, verbose_name='contenType对应list')),
                ('name', models.CharField(max_length=50, verbose_name='模块名')),
                ('code_name', models.CharField(max_length=100, verbose_name='模块参数')),
                ('rank', models.IntegerField(null=True, verbose_name='1:一级2：二级')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='项目名称')),
                ('version', models.CharField(max_length=50, verbose_name='版本')),
                ('type', models.CharField(choices=[('Web', 'Web'), ('App', 'App')], max_length=50, verbose_name='类型')),
                ('description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态0:删除，1：未删除')),
                ('LastUpdateTime', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
                ('createTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('user', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='sql_api',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sql_id', models.IntegerField(null=True, verbose_name='数据库环境')),
                ('autoApi_id', models.IntegerField(null=True, verbose_name='接口')),
            ],
        ),
        migrations.CreateModel(
            name='sqlManager',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='数据库取名')),
                ('sqltype', models.IntegerField(null=True, verbose_name='数据库类型1：mysql，2：redis，3：mango')),
                ('host', models.CharField(max_length=50, null=True, verbose_name='数据库地址')),
                ('username', models.CharField(max_length=50, null=True, verbose_name='登录名')),
                ('password', models.CharField(max_length=50, null=True, verbose_name='密码')),
                ('db', models.CharField(max_length=50, null=True, verbose_name='数据库名')),
                ('port', models.CharField(max_length=10, null=True, verbose_name='端口')),
                ('user', models.CharField(max_length=50, null=True, verbose_name='创建人')),
                ('desc', models.CharField(max_length=200, null=True, verbose_name='描述')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='step',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('autoCase_id', models.IntegerField(null=True, verbose_name='所属项目')),
                ('name', models.CharField(max_length=50, verbose_name='步骤名称')),
                ('type', models.CharField(max_length=20, verbose_name='步骤类型')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='步骤排序')),
                ('content', models.CharField(max_length=200, verbose_name='步骤类型')),
            ],
        ),
        migrations.CreateModel(
            name='task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='任务名')),
                ('desc', models.CharField(max_length=1024, verbose_name='任务描述')),
                ('type', models.CharField(choices=[('circulation', '循环'), ('timing', '定时'), ('simple', '单次')], default='timing', max_length=50, verbose_name='类型1、定时、2、循环、3、单次')),
                ('time', models.CharField(max_length=1024, verbose_name='定时')),
                ('status', models.IntegerField(default=0, verbose_name='1:执行中，2：结束，0：待执行,3:暂停')),
                ('startTime', models.DateTimeField(null=True, verbose_name='开始时间')),
                ('endTime', models.DateTimeField(null=True, verbose_name='结束时间')),
                ('user', models.CharField(default='', max_length=32, verbose_name='创建人')),
                ('env_id', models.CharField(default='', max_length=32, verbose_name='环境')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('min', models.CharField(default='*', max_length=32, null=True, verbose_name='分钟')),
                ('hour', models.CharField(default='*', max_length=32, null=True, verbose_name='小时')),
                ('day', models.CharField(default='*', max_length=32, null=True, verbose_name='天')),
                ('month', models.CharField(default='*', max_length=32, null=True, verbose_name='月')),
                ('week', models.CharField(default='*', max_length=32, null=True, verbose_name='周')),
            ],
        ),
        migrations.CreateModel(
            name='taskCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('task_id', models.IntegerField(default=0, verbose_name='任务')),
                ('case_id', models.IntegerField(default=0, verbose_name='用例')),
            ],
        ),
        migrations.CreateModel(
            name='uploadFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(null=True, verbose_name='apiautoApiId')),
                ('typeApi', models.IntegerField(default=0, verbose_name='0:自建 1:api 2：autoApi')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='文件名称')),
                ('fname', models.CharField(max_length=50, null=True, verbose_name='实际名称')),
                ('desc', models.CharField(max_length=100, null=True, verbose_name='文件描述')),
                ('path', models.CharField(max_length=100, null=True, verbose_name='文件路径')),
                ('user', models.CharField(max_length=50, verbose_name='创建人')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.Project', verbose_name='所属项目')),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('statusCode', models.CharField(blank=True, choices=[('200', '200'), ('404', '404'), ('400', '400'), ('502', '502'), ('500', '500'), ('302', '302')], max_length=1024, null=True, verbose_name='期望HTTP状态')),
                ('examineType', models.CharField(max_length=1024, verbose_name='匹配规则')),
                ('data', models.TextField(blank=True, null=True, verbose_name='规则内容')),
                ('result', models.CharField(choices=[('PASS', '成功'), ('FAIL', '失败'), ('ERROR', '异常')], max_length=50, verbose_name='测试结果')),
                ('httpStatus', models.CharField(blank=True, choices=[('200', '200'), ('404', '404'), ('400', '400'), ('502', '502'), ('500', '500'), ('302', '302')], max_length=50, null=True, verbose_name='http状态')),
                ('responseData', models.TextField(blank=True, null=True, verbose_name='实际返回内容')),
                ('user', models.CharField(max_length=32, verbose_name='创建人')),
                ('autoApi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.AutoApiCase', verbose_name='接口')),
            ],
            options={
                'verbose_name': '测试结果',
                'verbose_name_plural': '测试结果管理',
            },
        ),
        migrations.CreateModel(
            name='taskResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('autoRunTime_id', models.IntegerField(null=True, verbose_name='时间关联')),
                ('case_id', models.IntegerField(default=0, verbose_name='用例')),
                ('autoApi_id', models.IntegerField(default=0, verbose_name='接口')),
                ('result', models.CharField(choices=[('PASS', '成功'), ('FAIL', '失败'), ('ERROR', '异常')], max_length=50, verbose_name='测试结果')),
                ('httpStatus', models.CharField(blank=True, choices=[('200', '200'), ('404', '404'), ('400', '400'), ('502', '502'), ('500', '500'), ('302', '302')], max_length=50, null=True, verbose_name='http状态')),
                ('RequestHeaders', models.CharField(blank=True, max_length=1000, null=True, verbose_name='信息头')),
                ('ResponseHeaders', models.CharField(blank=True, max_length=1000, null=True, verbose_name='信息头')),
                ('RequestBody', models.CharField(blank=True, max_length=1000, null=True, verbose_name='请求参数')),
                ('Assertion', models.CharField(blank=True, max_length=1000, null=True, verbose_name='断言')),
                ('responseData', models.TextField(blank=True, null=True, verbose_name='实际返回内容')),
                ('user', models.CharField(max_length=32, verbose_name='创建人')),
                ('testTime', models.CharField(default='', max_length=50, verbose_name='测试时间')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.task', verbose_name='任务关联')),
            ],
            options={
                'verbose_name': '测试结果',
                'verbose_name_plural': '测试结果管理',
            },
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('env_name', models.CharField(max_length=32)),
                ('env_url', models.CharField(max_length=100, verbose_name='访问地址')),
                ('appKey', models.CharField(default='', max_length=100, null=True, verbose_name='appkey')),
                ('app_secret', models.CharField(default='', max_length=200, null=True, verbose_name='app_secret')),
                ('evn_port', models.CharField(max_length=10, verbose_name='端口')),
                ('env_desc', models.CharField(default='', max_length=1000)),
                ('env_createTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('user', models.CharField(max_length=32)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='用例名称')),
                ('user', models.CharField(max_length=32, verbose_name='创建人')),
                ('desc', models.CharField(blank=True, max_length=1024, null=True, verbose_name='描述')),
                ('status', models.CharField(default='4', max_length=32, verbose_name='状态：1成功，2失败 3未完成 4未开始')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('LastUpdateTime', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.Project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '用例',
                'verbose_name_plural': '用例管理',
            },
        ),
        migrations.CreateModel(
            name='AutoTaskRunTime',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('startTime', models.DateTimeField(null=True, verbose_name='开始时间')),
                ('endTime', models.DateTimeField(null=True, verbose_name='结束时间')),
                ('testTime', models.DateTimeField(null=True, verbose_name='测试时间')),
                ('task', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='django_web.task', verbose_name='任务')),
            ],
            options={
                'verbose_name': '用例任务执行时间',
                'verbose_name_plural': '用例任务执行时间',
            },
        ),
        migrations.CreateModel(
            name='autoApiParameterRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('autoApi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.AutoApiCase', verbose_name='所属接口')),
            ],
            options={
                'verbose_name': '请求参数Raw',
            },
        ),
        migrations.CreateModel(
            name='autoAPIParameter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('requestParameterType', models.CharField(choices=[('form-data', '表单(form-data)'), ('raw', '源数据(raw)')], max_length=50, verbose_name='请求参数格式')),
                ('name', models.CharField(max_length=1024, verbose_name='参数名')),
                ('value', models.CharField(blank=True, max_length=1024, null=True, verbose_name='内容')),
                ('paramType', models.CharField(choices=[('int', 'int'), ('string', 'string')], default='string', max_length=1024, verbose_name='类型')),
                ('file_id', models.IntegerField(null=True, verbose_name='文件id')),
                ('autoApi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameterList', to='django_web.AutoApiCase', verbose_name='接口')),
            ],
            options={
                'verbose_name': '用例接口参数',
                'verbose_name_plural': '用例接口参数管理',
            },
        ),
        migrations.CreateModel(
            name='autoApiHead',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024, verbose_name='标签')),
                ('value', models.CharField(blank=True, max_length=1024, null=True, verbose_name='内容')),
                ('autoApi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.AutoApiCase', verbose_name='所属接口')),
            ],
            options={
                'verbose_name': '用例请求头',
                'verbose_name_plural': '用例请求头管理',
            },
        ),
        migrations.AddField(
            model_name='autoapicase',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.Case', verbose_name='所属用例'),
        ),
        migrations.AddField(
            model_name='autoapicase',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.Project', verbose_name='所属项目'),
        ),
        migrations.CreateModel(
            name='asserts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=200, null=True, verbose_name='返回参数路径')),
                ('value', models.CharField(max_length=50, null=True, verbose_name='变量值')),
                ('real_value', models.CharField(max_length=50, null=True, verbose_name='实际变量值')),
                ('user', models.CharField(max_length=50, verbose_name='创建人')),
                ('CreateTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('autoApi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.AutoApiCase', verbose_name='任务关联')),
            ],
        ),
        migrations.CreateModel(
            name='ApiParameterRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('api', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='django_web.ApiCase', verbose_name='所属接口')),
            ],
            options={
                'verbose_name': '请求参数Raw',
            },
        ),
        migrations.CreateModel(
            name='APIParameter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('requestParameterType', models.CharField(choices=[('form-data', '表单(form-data)'), ('raw', '源数据(raw)')], max_length=50, verbose_name='请求参数格式')),
                ('name', models.CharField(max_length=1024, verbose_name='参数名')),
                ('value', models.CharField(blank=True, max_length=1024, null=True, verbose_name='内容')),
                ('paramType', models.CharField(choices=[('int', 'int'), ('string', 'string')], default='string', max_length=1024, verbose_name='类型')),
                ('file_id', models.IntegerField(null=True, verbose_name='文件id')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameterList', to='django_web.ApiCase', verbose_name='接口')),
            ],
            options={
                'verbose_name': '接口参数',
                'verbose_name_plural': '接口参数管理',
            },
        ),
        migrations.CreateModel(
            name='ApiHead',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024, verbose_name='标签')),
                ('value', models.CharField(blank=True, max_length=1024, null=True, verbose_name='内容')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.ApiCase', verbose_name='所属接口')),
            ],
            options={
                'verbose_name': '请求头',
                'verbose_name_plural': '请求头管理',
            },
        ),
        migrations.AddField(
            model_name='apicase',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_web.Project', verbose_name='所属项目'),
        ),
    ]
